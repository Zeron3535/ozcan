# Generated by Django 5.0.1 on 2025-05-31 17:23

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('professionals', '0002_city_experttype_professionalprofile_experience_years_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='experttype',
            name='is_visible',
            field=models.BooleanField(default=True, help_text='Web sitesinde görünsün mü?', verbose_name='Görünür Mü'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='allow_social_media',
            field=models.BooleanField(default=True, help_text='Yönetici tarafından kontrol edilir', verbose_name='Sosyal Medya Linklerine İzin Ver'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='facebook',
            field=models.URLField(blank=True, null=True, verbose_name='Facebook'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='instagram',
            field=models.URLField(blank=True, null=True, verbose_name='Instagram'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='is_active',
            field=models.BooleanField(default=True, verbose_name='Aktif Mi'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='is_visible',
            field=models.BooleanField(default=True, verbose_name='Görünür Mü'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='linkedin',
            field=models.URLField(blank=True, null=True, verbose_name='LinkedIn'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='twitter',
            field=models.URLField(blank=True, null=True, verbose_name='Twitter'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='website',
            field=models.URLField(blank=True, null=True, verbose_name='Web Sitesi'),
        ),
        migrations.AddField(
            model_name='professionalprofile',
            name='youtube',
            field=models.URLField(blank=True, null=True, verbose_name='YouTube'),
        ),
        migrations.AddField(
            model_name='service',
            name='price',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Hizmet ücreti (TL)', max_digits=10, null=True, verbose_name='Fiyat'),
        ),
        migrations.AddField(
            model_name='service',
            name='show_price',
            field=models.BooleanField(default=True, verbose_name='Fiyat Gösterilsin Mi'),
        ),
        migrations.AddField(
            model_name='specialization',
            name='is_visible',
            field=models.BooleanField(default=True, help_text='Web sitesinde görünsün mü?', verbose_name='Görünür Mü'),
        ),
        migrations.AlterField(
            model_name='professionalprofile',
            name='specializations',
            field=models.ManyToManyField(blank=True, help_text='Birden fazla dal seçebilirsiniz', related_name='professionals', to='professionals.specialization', verbose_name='Uzmanlık Dalları'),
        ),
        migrations.AlterField(
            model_name='service',
            name='meeting_type',
            field=models.CharField(choices=[('online', 'Online'), ('face_to_face', 'Yüz Yüze'), ('both', 'Her İkisi')], default='face_to_face', max_length=20, verbose_name='Görüşme Tipi'),
        ),
        migrations.CreateModel(
            name='AppointmentSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_advance_hours', models.PositiveIntegerField(default=24, help_text='Randevu alınabilecek minimum saat öncesi', verbose_name='Minimum İleri Tarih (Saat)')),
                ('max_advance_days', models.PositiveIntegerField(default=30, help_text='Randevu alınabilecek maximum gün sonrası', verbose_name='Maximum İleri Tarih (Gün)')),
                ('appointment_interval', models.PositiveIntegerField(default=30, help_text='Randevular arası minimum süre', verbose_name='Randevu Aralığı (Dakika)')),
                ('buffer_time', models.PositiveIntegerField(default=0, help_text='Randevular arası dinlenme süresi', verbose_name='Ara Süre (Dakika)')),
                ('allow_cancellation', models.BooleanField(default=True, verbose_name='İptal İzni')),
                ('cancellation_hours', models.PositiveIntegerField(default=24, help_text='Randevu öncesi kaç saat önce iptal edilebilir', verbose_name='İptal Süresi (Saat)')),
                ('auto_confirm', models.BooleanField(default=False, help_text='Randevular otomatik onaylansın mı?', verbose_name='Otomatik Onay')),
                ('professional', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='appointment_settings', to='professionals.professionalprofile', verbose_name='Profesyonel')),
            ],
            options={
                'verbose_name': 'Randevu Ayarları',
                'verbose_name_plural': 'Randevu Ayarları',
            },
        ),
        migrations.CreateModel(
            name='ProfessionalVideo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Video Başlığı')),
                ('video_url', models.URLField(help_text='YouTube, Vimeo vb. video linki', verbose_name='Video URL')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Sıralama')),
                ('is_active', models.BooleanField(default=True, verbose_name='Aktif Mi')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Oluşturulma Tarihi')),
                ('professional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='professionals.professionalprofile', verbose_name='Profesyonel')),
            ],
            options={
                'verbose_name': 'Profesyonel Videosu',
                'verbose_name_plural': 'Profesyonel Videoları',
                'ordering': ['professional', 'order', '-created_at'],
            },
        ),
    ]
